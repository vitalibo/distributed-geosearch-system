apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "zookeeper.fullname" . }}
  labels:
    {{- include "zookeeper.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "zookeeper.fullname" . }}-headless
  replicas: {{ .Values.replicaCount | default 3}}
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      {{- include "zookeeper.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      name: {{ include "zookeeper.fullname" . }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zookeeper.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: [ "zkServer.sh", "start-foreground" ]
          ports:
            - containerPort: {{ .Values.service.port }}
              name: client
            - containerPort: 2888
              name: server
            - containerPort: 3888
              name: leader-election
          readinessProbe:
            exec:
              command: [ "sh", "-c", "echo ruok | nc 127.0.0.1 {{ .Values.service.port }} | grep imok" ]
            initialDelaySeconds: 10
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command: [ "sh", "-c", "echo ruok | nc 127.0.0.1 {{ .Values.service.port }} | grep imok" ]
            initialDelaySeconds: 10
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.environments }}
          env:
            {{- range $key, $value := .Values.environments }}
            - name: {{ $key | quote}}
              value: {{ $value | quote}}
            {{- end }}
          {{- end }}
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/bash"
                  - "-c"
                  - |
                    sed "s/${HOSTNAME}\.[^:]*:/0.0.0.0:/g" /etc/kafka/zoo.cfg  > /conf/zoo.cfg
                    echo $((${HOSTNAME##*-}+1)) > /data/myid
          volumeMounts:
            - name: data
              mountPath: /var/lib/zookeeper
            - name: configmap
              mountPath: /etc/kafka
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: configmap
          configMap:
            name: {{ include "zookeeper.fullname" . }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
