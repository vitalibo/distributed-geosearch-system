version: '3'
services:
  kadeckweb:
    image: xeotek/kadeckweb:latest
    hostname: kadeckweb
    container_name: kadeckweb
    ports:
      - "80:80"
    environment:
      xeotek_kadeck_port: 80
      xeotek_kadeck_teamid: docker.bQLUoUua4ro
      xeotek_kadeck_secret: 560cbcf40ea39f8212f51dfe2344054169b1363debe3893c8e7db242f79e62a562c06043cf2cec240651
    depends_on:
      - broker
      - schema-registry

  kadeckweb_post_install:
    image: appropriate/curl
    depends_on:
      - kadeckweb
    entrypoint: '/bin/sh'
    command:
      - "-c"
      - |
        until nc -vz kadeckweb 80 ; do
          echo waiting for kadeckweb; sleep 5;
        done
        curl -X POST http://kadeckweb:80/api/auth -c cookie --data \
          '{
            "username": "admin",
            "password": "admin"
          }'
        curl -X POST http://kadeckweb:80/api/servers -b cookie --data \
          '{
            "id": -1,
            "name": "local",
            "address": "broker:29092",
            "schemaregistry": "schema-registry:8081",
            "type": "KAFKA",
            "security": {
              "ts_loc": "",
              "ts_pass": "",
              "ks_loc": "",
              "ks_pass": "",
              "ks_ppass": "",
              "protocol": "PLAINTEXT"
            },
            "sasl": null,
            "schemasecurity": null
          }'

  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:6.0.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  broker_init_container:
    image: hashicorp/terraform:0.14.5
    container_name: broker_init_container
    depends_on:
      - broker
      - schema-registry
    working_dir: /var/lib/kafka
    entrypoint: '/bin/sh'
    command:
      - "-c"
      - |
        terraform init
        while ! nc -vz broker 29092 ; do sleep 1; done
        terraform apply -auto-approve
    volumes:
      - ${PWD}/resources.tf:/var/lib/kafka/resources.tf

  schema-registry:
    image: confluentinc/cp-schema-registry:6.0.1
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

networks:
  default:
    external: false
    name: dgss-network
